// This solution will require an Event Grid to dynamically ingest the data from the blob container.
// Creating the Event Grid is the last step in this process.  The tables, mapping, and function have to be implemented first.

// 1. INTERNAL TABLE | BLOB CONTAINER SOLUTION
.create table WinSecEventsRaw (Records:dynamic)

// 2. Set the ingest json mapping ..this puts each JSON object as it's own record
.create table WinSecEventsRaw ingestion json mapping 'WinSecEventsRawMapping' '[{"column":"Records","Properties":{"path":"$.records"}}]'

// 3. Set the retention policy
.alter-merge table EventRaw policy retention softdelete = 0d

// 4. Create the internal table
.create table WinSecEvents (
    TimeGenerated: datetime,
    PublisherId: string,
    TimeCreated: datetime,
    PublisherName: string,
    Channel: string,
    LoggingComputer: string,
    EventID: string,
    EventCategory: string,
    EventLevel: string,
    UserName: string,
    RawXml: string,
    EventDescription: string,
    RenderingInfo: string,
    EventRecordId: string,
    Keywords: string,
    InstanceId: string,
    IngestTime: datetime,
    Type: string
)

// 5. Create the Expand function that will process each record
.create-or-alter function WinSecEventsExpand() {
    WinSecEventsRaw
    | mv-expand events = Records 
    | where isnotempty(todatetime(events.['time']))
    | project
        TimeGenerated = todatetime(events['time']),
        PublisherId = tostring(events.PublisherId),
        TimeCreated = todatetime(events.TimeCreated),
        PublisherName = tostring(events.PublisherName),
        Channel = tostring(events.Channel),
        LoggingComputer = tostring(events.LoggingComputer),
        EventID = tostring(events.EventNumber),
        EventCategory = tostring(events.EventCategory),
        EventLevel = tostring(events.EventLevel),
        UserName = tostring(events.UserName),
        RawXml = tostring(events.RawXml),
        EventDescription = tostring(events.EventDescription),
        RenderingInfo = tostring(events.RenderingInfo),
        EventRecordId = tostring(events.EventRecordId),
        Keywords = tostring(events.Keywords),
        InstanceId = tostring(events.InstanceId),
        IngestTime = todatetime(events.IngestTime),
        Type = 'WinSecEvents'
}

// 6. Map the function WinSecEventsExpand() from the WinSecEventsRaw table and apply the result on to the WinSecEvents table!
.alter table WinSecEvents policy update @'[{"Source": "WinSecEventsRaw", "Query": "WinSecEventsExpand()", "IsEnabled": true, "IsTransactional": true}]'

// END OF INTERNAL TABLE SOLUTION
